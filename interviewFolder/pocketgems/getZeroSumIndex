http://yuanhsh.iteye.com/blog/2206026
http://www.lintcode.com/en/problem/subarray-sum/


//http://www.lintcode.com/en/problem/subarray-sum/
given an array, return the starting and ending index of all subarrays that sums to 0;
ex: 1 , -2, 2, -1, 0 , 5
return (1,2)(0,3)(4,4)(0,4)

//sum[i] = 0,1,-1,1,0,0,5

    public List<List<Integer>> subarraySum(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        int[] sum = new int[nums.length+1];
        for(int i=1; i < sum.length; i++) {
            //如果没有这个的话 (4,4)会忽略掉
            if(nums[i-1] == 0) {
                List<Integer> temp = new ArrayList<Integer>();
                temp.add(i-1);
                temp.add(i-1);
                res.add(temp);    
            }
            sum[i] = sum[i-1]+nums[i-1];
        }
       
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        for(int i=0; i < sum.length; i++) {
            if(map.containsKey(sum[i])) {
                List<Integer> temp = new ArrayList<Integer>();
                temp.add(map.get(sum[i]));
                temp.add(i-1);
                res.add(temp);
            } else {
                map.put(sum[i],i);
            }
        }
        return res;
    }
