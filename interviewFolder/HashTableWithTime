//http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=141712&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption[3046][value]%3D22%26searchoption[3046][type]%3Dradio%26sortid%3D311
timestamp是int
insert应该比较好理解吧就是直接插入。
get的话如果给明确的timestamp了，就返回比给定的timestamp小并且latest timestamp对应的value
如果没给timestamp就是返回key+latest timestamp的value

//time complexity is O(logn) for both put and get

public class Solution {

    public static void main(String[] args) throws InterruptedException  {


        keyToTMap<String, String> entry = new keyToTMap<String, String>();
        entry.put("k1", 10, "v1");
        System.out.println(entry.get("k1"));
        System.out.println(entry.get("k1",11));
        entry.put("k1", 14, "v2");
        System.out.println(entry.get("k1",15));
        System.out.println(entry.get("k1",11));
        System.out.println(entry.get("k1",21));


    }
}



class keyToTMap<K,V> {
    Map<K,TreeMap<Integer,V>> keyToBSTMap = new HashMap<K, TreeMap<Integer,V>>();
    public V get(K k, Integer time) {
        if(keyToBSTMap.containsKey(k) == false)
            return null;
        if(keyToBSTMap.get(k).containsKey(time)) {
            return keyToBSTMap.get(k).get(time);
        } else {
            return keyToBSTMap.get(k).lowerEntry(time).getValue();
        }
    }
    public V get(K k) {
        if(keyToBSTMap.containsKey(k) == false)
            return null;
        Integer lastestTime =keyToBSTMap.get(k).lastKey();
        return keyToBSTMap.get(k).get(lastestTime);
    }
    public void put(K k, Integer time, V value) {
        if(keyToBSTMap.containsKey(k))
            keyToBSTMap.get(k).put(time,value);
        else {
            TreeMap<Integer, V> t = new TreeMap<Integer,V>();
            t.put(time,value);
            keyToBSTMap.put(k,t);
        }
    }
}
