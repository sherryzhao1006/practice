Better solution (without two arraylist)

public List<Integer> grayCode(int n) {
        List<Integer> result=new ArrayList<Integer>();
        if(n == 0){
            result.add(n);
            return result;
        }
        int count=1;
        result.add(0);
        result.add(1);
        while(count<n){
            int num=1<<count;
            for(int i=result.size()-1;i>=0;--i){
                result.add(result.get(i)+num);
            }
            count++;
        }
        return result;
    }



n=2
0|00
0|01
0|11
0|10

n=3

0|00
0|01
0|11
0|10 -


1|10 -
1|11
1|01
1|00

    public List<Integer> grayCode(int n) {
        List<Integer> first = new ArrayList<Integer>();
        if(n == 0){
            first.add(n);
            return first;
        }
        
        List<Integer> second = new ArrayList<Integer>();
        first.add(0);
        first.add(1);
        for(int i=2; i <=n ; i++) {
            second.addAll(first);
            for(int j=first.size()-1; j >=0; j--) {
                second.add(1 << (i-1) | first.get(j));
            }
            first = second;
            second = new ArrayList<Integer>();
        }
        return first;
    }
