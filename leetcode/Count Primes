https://leetcode.com/static/images/solutions/Sieve_of_Eratosthenes_animation.gif
//http://blog.csdn.net/craiglin1992/article/details/44918505


public class Solution {

    public int countPrimes(int n) {
        boolean[] isPrime = new boolean[n];
        for(int i=2; i < n; i++) {
            isPrime[i] = true;
        }
        for(int i=2; i*i < n; i++) {
            if(!isPrime[i])
                continue;
            //2,4,6,8,10
            for(int j=2; i*j < n; j++) {
                isPrime[i*j] = false;
            }       
        }
        int cnt = 0;
        for(int i=2; i < n; i++) {
            if(isPrime[i]) {
                cnt++;
            }
        }
        return cnt;
    }
}
//time : runtime complexity is O(n log log n). 
//space : O(n)
