public class Solution {
    public String numberToWords(int num) {
        if(num ==0){
            return "Zero";
        }
        StringBuffer br=new StringBuffer();
        String[] unit={"","Thousand ","Million ","Billion "};
        int i=0;
        while(num > 0){
            //br.insert(0,""+unit[i]);
            if(num %1000 != 0){
            br.insert(0,""+unit[i]);
            br.insert(0,helper(num%1000));
            }
            num=num/1000;
            i++;
        }
        return br.toString().trim();
    }
    public String helper(int num) {
        String[] digit={"Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"};//个位数
        String[] teen = {"Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"};//十位数
        String[] tey ={"","","Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty","Ninety"};
    //231
        //3位数
        StringBuilder sb = new StringBuilder(); 
        int currNum = num%100;
        if(currNum >= 10 && currNum < 20) {
            sb.append(teen[currNum-10]+" ");    
        }
        else {
            //2位数
            //23
            //3
            if(currNum>0){//tricky here to handle 0
            //line 60 : example : 20
             if(currNum % 10 != 0)
             {
                 sb.insert(0,digit[currNum%10]+" ");
             }
             currNum = currNum/10;
             if(currNum > 0) {
                 sb.insert(0,tey[currNum]+" ");
             }
            }
        }
        //31
        if(num>=100){
            sb.insert(0,digit[num/100] + " Hundred ");
        }
        return sb.toString();
    } 
} 
