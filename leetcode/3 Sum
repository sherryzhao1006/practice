INPUT: S = {-1, 0, 1, 2, -1, -4}
OUTPUT: (-1, 0, 1) and (-1, -1, 2) 

sort: -4,-1,-1,0,1,2
          i    j k
sum=num1+num2+num3
num1 constant, num2 num3
sum<0 sum2++

public class Solution {
    public List<List<Integer>> threeSum(int[] num) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(num == null || num.length == 0)
            return res;
        Arrays.sort(num);
        for(int i=0; i < num.length-2; i++) {
        
            if(i > 0) {
                if(num[i] ==num[i-1])
                    continue;
            }
            
            int left = i+1;
            int right = num.length-1;
            while(left < right) {
            
                int sum = num[i]+num[left]+num[right];
                if(sum > 0) {
                    right--;
                } else if( sum < 0) {
                    left++;
                }else {
                    List<Integer> currRes = new ArrayList<Integer>();
                    currRes.add(num[i]);
                    currRes.add(num[left]);
                    currRes.add(num[right]);
                    res.add(currRes);
                    left++;
                    while(left < right && num[left] == num[left-1])
                        left++;
                    right--;                                       
    
                    while(left < right && num[right] == num[right+1])
                        right--;
                }
              

            }
        }
         return res;      
    }
}
