//https://dl.dropboxusercontent.com/u/15824957/Lintcode/BST%20Iterator.png
//https://dl.dropboxusercontent.com/u/15824957/BinaryTreeIterator.mov
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result=new ArrayList<>();
        if(root == null){
            return result;
        }
       Stack<TreeNode> s = new Stack<>();
       TreeNode curr = root;
       while(!s.isEmpty() || curr != null) {
           if(curr == null) {
               curr = s.pop();
               result.add(curr.val);
               curr = curr.right;
               
           } else{
               while(curr.left != null) {
                   s.push(curr);
                   curr = curr.left;
               }
               result.add(curr.val);
               curr = curr.right;
           }
       }  
       return result;
    }
}
