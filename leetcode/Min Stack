class MinStack {
    private Stack<Integer> stack;
    private Stack<Integer> minStack;
    public MinStack() {
         stack = new Stack<Integer>();
         minStack = new Stack<Integer>();        
    }
        
    public void push(int x) {
        stack.push(x);
        if(!minStack.isEmpty()) {
            if(x > minStack.peek()) {
                minStack.push(minStack.peek());
            } else {
                minStack.push(x);
            }
        } else {
            minStack.push(x);
        }        
    }

    public void pop() {
        stack.pop();
        minStack.pop();
    }

    public int top() {
        if(!stack.isEmpty()) {
            return stack.peek();
        }    
        return -1;
    }

    public int getMin() {
        if(!minStack.isEmpty()) {
            return minStack.peek();
        }
        return -1;        
    }
    public boolean isEmpty() {
        return stack.isEmpty();
    }
}
