My Solution :
    public boolean isHappy(int n) {
        if(n == 1)
            return true;
        Set<Integer> map = new HashSet<Integer>();
        while(n != 1) {
            if(map.contains(n))
                return false;
            map.add(n);
            n = helper(n,map);
        }
        return true;
    }
    public int helper(int n, Set<Integer> map) {
        int sum = 0;
        String s = String.valueOf(n);
        for(int i=0; i < s.length(); i++) {
            int curr = (int)(s.charAt(i)-'0');
            sum += Math.pow(curr,2);
        }
        return sum;
    }
    
    
    
    Better short solution :
        public boolean isHappy(int n) {
        if(n == 1){
            return true;
        }
        HashSet<Integer> set=new HashSet<Integer>();
        set.add(n);
        while(n != 1){
            int result=0;
            while(n != 0){
                result+=Math.pow(n%10,2);
                n=n/10;
            }
            if(set.contains(result)){
                return false;
            }
            set.add(result);
            n=result;
        }
        return true;
    }
