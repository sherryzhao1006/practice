https://leetcode.com/problems/combinations/
 Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]


    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        helper(res, new ArrayList<Integer>(),n,k,1,0);
        return res;
    }
    public void helper(List<List<Integer>> res, List<Integer> currRes, int n, int k, int curr,int index) {
        if(index == k) {
            res.add(new ArrayList<Integer>(currRes));    
        } else {
            for(int i=curr; i <= n; i++) {
                currRes.add(i);
                helper(res,currRes,n,k,i+1,index+1);
                currRes.remove(currRes.size()-1);
            }
        }
    }
