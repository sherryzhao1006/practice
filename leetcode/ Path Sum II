    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(root == null) {
            return res;
        }
        helper(res, root, sum,new ArrayList<Integer>());
        return res;
    }
    public void helper(List<List<Integer>> res, TreeNode root, int sum, List<Integer> currRes) {
        if(root == null)
            return;
        currRes.add(root.val);
        if(root.left == null && root.right == null && sum == root.val) {
            res.add(new ArrayList<Integer>(currRes));
        } else {
            helper(res,root.left,sum-root.val,currRes);
            helper(res,root.right,sum-root.val,currRes);
            
        }
        currRes.remove(currRes.size()-1);
    }
