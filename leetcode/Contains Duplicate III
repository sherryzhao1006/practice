//http://www.programcreek.com/2014/06/leetcode-contains-duplicate-iii-java/

public class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        if ( k < 1 || t < 0) {
            return false;
        }
        SortedSet<Long> set = new TreeSet<Long>();
        for(int i=0;i<nums.length;++i){
            long lowerBound = (long)nums[i] - t;// (long)(nums[i] -t ) //overflow here before converting to long 
            long upperBound = (long)nums[i] + t + 1;
            SortedSet<Long> subset = set.subSet(lowerBound,upperBound);
            if(!subset.isEmpty()){
                return true;    
            }
            set.add((long)nums[i]);
            if(i >= k) {//equals because index
                set.remove((long)nums[i-k]);
            }
        }   
        return false;           
    }
}
