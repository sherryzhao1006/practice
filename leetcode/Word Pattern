public class Solution {
    public boolean wordPattern(String pattern, String str) {
        if(str == null || str.length() ==1)
            return true;
        String[] s = str.split(" ");
        if(pattern.length() != s.length)
            return false;
        Map<Character,String> cMap = new HashMap<Character,String>();
        Map<String,Character> strMap = new HashMap<String,Character>();
        for(int i=0; i < pattern.length(); i++) {
            char c = pattern.charAt(i);
            if(!cMap.containsKey(c)) {
                cMap.put(c,s[i]);
            } else {
                if(!cMap.get(c).equals(s[i]))
                    return false;
            }
            if(!strMap.containsKey(s[i])) {
                strMap.put(s[i],c);
            } else {
                if(!strMap.get(s[i]).equals(c))
                    return false;
            }
        }
        return true;
    }
}
