https://dl.dropboxusercontent.com/u/15824957/Lintcode/SearchInsertPosition.png

public class Solution {
    public int searchInsert(int[] nums, int target) {
        if(nums == null || nums.length == 0) {
            return 0;
        }        
        int left = 0;
        int right = nums.length-1;
        while(left <= right) {
            int m = left + (right-left)/2;
            if(nums[m] == target) {
                return m;
            } else if(nums[m] > target) {
                right = m-1;
            } else {
                left = m+1;
            }
        }
        return left;
    }
}

(OR)


public class Solution {
    public int searchInsert(int[] nums, int target) {
        int left = 0;
        int right = nums.length-1;
        while(left <= right) {
            int m = left + (right-left)/2;
            if(nums[m] < target) {
                left = m+1;
            } else if(nums[m] >= target){
                right = m-1;
            }
        }        
        return left;
    }
}

