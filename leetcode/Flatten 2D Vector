https://leetcode.com/problems/flatten-2d-vector/
Implement an iterator to flatten a 2d vector.

For example,
Given 2d vector =

[
  [1,2],
  [3],
  [4,5,6]
]

By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,2,3,4,5,6].



public class Vector2D {
    private int[] values;
    private int currCount =0;
    public Vector2D(List<List<Integer>> vec2d) {
        int counter = 0;
        if(vec2d == null || vec2d.size() == 0){
            values = new int[0];
            return;
        }
        for(List<Integer> l : vec2d) {
            counter += l.size();
        }
        values = new int[counter];
        counter = 0;
        for(List<Integer> l : vec2d) {
            for(int curr : l) {
                values[counter++] = curr;    
            }
        }
    }

    public int next() {
        return values[currCount++];
    }

    public boolean hasNext() {
        if(currCount < values.length)
            return true;
        return false;
    }
}

/**
 * Your Vector2D object will be instantiated and called as such:
 * Vector2D i = new Vector2D(vec2d);
 * while (i.hasNext()) v[f()] = i.next();
 */
