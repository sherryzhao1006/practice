testcase 1: 
arr =  1,2
left = [0,1]
right =[1,0]

arr = 1,2,5
it becomes buy at 1 and sell at 5 or buy at 1 and sell at 2 and buy at 2 and sell at 5 

class Solution {
    /**
     * @param prices: Given an integer array
     * @return: Maximum profit
     */
        public int maxProfit(int[] prices) {
        if(prices == null || prices.length == 0 || prices.length == 1)
            return 0;
        int n = prices.length;
        int min = prices[0];
        int[] left = new int[n];
        int[] right = new int[n];
        
        for(int i=1; i < n; i++) {
            min = Math.min(min,prices[i]);
            left[i] = Math.max(prices[i]-min,left[i-1]);
        }
        int max = prices[n-1];
        for(int i=n-2; i >=0; i--) {
            max = Math.max(max,prices[i]);
            right[i] = Math.max(max-prices[i],right[i+1]);
        }        
        int output = 0;
        for(int i=0; i < n; i++){
            output = Math.max(output,left[i]+right[i]);
        }
        return output;
        
    }
};
