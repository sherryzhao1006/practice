Dropbox/lintcode/subset_noduplicate.mov
https://dl.dropboxusercontent.com/u/15824957/Lintcode/Subset.png
class Solution {
    /**
     * @param S: A set of numbers.
     * @return: A list of lists. All valid subsets.
     */
    public ArrayList<ArrayList<Integer>> subsets(ArrayList<Integer> S) {
        ArrayList<ArrayList<Integer>> result=new ArrayList<>();
        if(S == null || S.size() == 0){
          return result;
        }                                                      
        int n = S.size();
        ArrayList<Integer> sub=new ArrayList<>();
        result.add(sub);
        Collections.sort(S);
        helper(0,n,S,sub,result);
        return result;
    }
    
    
    
    public void helper(int curr,int n, ArrayList<Integer> S, ArrayList<Integer> sub,ArrayList<ArrayList<Integer>> res) {
        if(curr >=n)
            return;
        for(int i=curr; i < n; i++) {
                sub.add(S.get(i));
                res.add(new ArrayList<Integer>(sub)); 
                helper(i+1,n,S,sub,res);
                sub.remove(sub.size()-1);
          }
        
    }
}
