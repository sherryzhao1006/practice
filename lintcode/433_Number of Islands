public class Solution {
    /**
     * @param grid a boolean 2D matrix
     * @return an integer
     */
    public int numIslands(boolean[][] grid) {

        if(grid.length ==0)
            return 0;
        int n = grid.length;
        int m = grid[0].length;
        int count = 0;
        for(int i=0; i < n; i++) {
            for(int j=0; j <m ;j++) {
                if(grid[i][j] == true) {
                    dfs(grid,i,j,n,m);
                    count++;
                }
            }
        }
        return count;
    }
    public void dfs(boolean[][] grid, int x, int y, int n, int m) {
        if(x < 0 || x >= n || y < 0 || y >=m || grid[x][y] == false) {
            return;
        }

        grid[x][y] = false;
        dfs(grid,x-1,y, n,m);
        dfs(grid,x+1,y,n,m);
        dfs(grid,x,y+1,n,m);
        dfs(grid,x,y-1,n,m);
    }
}
