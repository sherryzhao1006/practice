public class Solution {
    /**
     * @param head: The first node of linked list.
     * @return: a tree node
     */
    private ListNode curr=null;
    public TreeNode sortedListToBST(ListNode head) {
        if(head == null)
            return null;
        int len = getLength(head);
        curr = head;
        return helper(0,len-1);
    }
    public TreeNode helper(int start, int end) {
        if(start > end)
            return null;
        
        int mid=start+(end-start)/2;    
        TreeNode left=helper(start,mid-1);
        TreeNode root = new TreeNode(curr.val);
        curr = curr.next;
        
        TreeNode right=helper(mid+1,end);
        root.left = left;
        root.right = right;
        return root;
    }
    public int getLength(ListNode head){
        int len=0;

        while(head != null){
            len++;
            head=head.next;
        }
        return len;
    }
}   
