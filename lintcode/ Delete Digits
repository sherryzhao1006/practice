 A = "178542", k = 4

17542
1542
142
12
  __


return a string "12"
substring[start,end+1)


public class Solution {
    /**
     *@param A: A positive integer which has N digits, A is a string.
     *@param k: Remove k digits.
     *@return: A string
     */
    public String DeleteDigits(String A, int k) {
        // write your code here
        
        if(k==A.length()){
            return "";
        }
        
        for(int i = 0 ;i<k;i++){
            for(int j=0;j< A.length();j++){
                if( j==A.length()-1 || A.charAt(j)>A.charAt(j+1)){
                    A =remove(A,j);
                    break;
                }
            }
        }
        int i = 0;
        while(i < A.length()-1 && A.charAt(i)=='0'){
            i++;   
        }
        return A.substring(i,A.length());
        
    }
    public String remove(String A, int j){
        return A.substring(0,j)+A.substring(j+1,A.length());
    }
}
 ==============================================
 
 A = "178542", k = 4

17542
1542
142
12
  __


return a string "12"



class Solution {
public:
    /**
     *@param A: A positive integer which has N digits, A is a string.
     *@param k: Remove k digits.
     *@return: A string
     */
    string remove(string A, int pos) {
        return A.substr(0, pos) + A.substr(pos + 1, A.length() - pos - 1);
    }
    
    string DeleteDigits(string A, int k) {
        if (A.length() == k) {
            return "";
        }
        
        for (int i = 0; i < k; i++) {
            for (int j = 0; j < A.length(); j++) {
                if (j == A.length() - 1 || A[j + 1] < A[j]) {
                    A = remove(A, j);
                    break;
                }
            }
        }
        
        int i = 0;
        while (i < A.length() - 1 && A[i] == '0') {
            i++;
        }
        return A.substr(i, A.length() - i);
    }
};
