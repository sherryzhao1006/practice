dp[n][m] = the maximum amount of n items that u can put into m-size bag
dp[i][j]= Math.max(d[i-1][j],d[i-1][j-A[i]]+A[i])
  
  5000, [828,125,740,724,983,321,773,678,841,842,875,377,674,144,340,467,625,916,463,922,255,662,692,123,778,766,254,559,480,483,904,60,305,966,872,935,626,691,832,998,508,657,215,162,858,179,869,674,452,158,520,138,847,452,764,995,600,568,92,496,533,404,186,345,304,420,181,73,547,281,374,376,454,438,553,929,140,298,451,674,91,531,685,862,446,262,477,573,627,624,814,103,294,388]

4999
5000
  
public int backPack(int m, int[] A) {
      int n = A.length;
      int[][] dp = new int[n][m+1];
      for(int i=0; i < n; i++) {
        dp[i][0] = 0;
      }
      
      for(int i=0; i <= m; i++) {
        dp[0][i] = (A[0] <= i) ? A[0] : 0;
      }
      
      for(int i=1; i < n; i++) {
        for(int j=0; j <= m; j++) {
          
          if(j >= A[i]) 
            dp[i][j] = Math.max(dp[i-1][j],dp[i-1][j-A[i]]+A[i]);
                          //放A[i]还是不放A[i].两个取最大
          else
            dp[i][j] = dp[i-1][j];
        }
      }
      return dp[n-1][m];
    }
}
