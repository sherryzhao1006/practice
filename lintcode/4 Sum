public class Solution {
    /**
     * @param numbers : Give an array numbersbers of n integer
     * @param target : you need to find four elements that's sum of target
     * @return : Find all unique quadruplets in the array which gives the sum of
     *           zero.
     */
    public ArrayList<ArrayList<Integer>> fourSum(int[] numbers, int target) { 
        Arrays.sort(numbers);
                Arrays.sort(numbers);
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        int n = numbers.length;
        
        for(int i=0; i < n; i++) {
            if (i > 0 && numbers[i] == numbers[i - 1])  
                    continue; 
                 for(int j=i+1;j<n;j++)   { 
                     if (j > i+1 && numbers[j] == numbers[j - 1])  
                         continue;                     
                    int left = j+1;
                    int right = n-1;
                    while(left < right) {
                        if(numbers[i]+numbers[j]+numbers[left]+numbers[right] == target) {
                            ArrayList<Integer> temp = new ArrayList<Integer>();
                            temp.add(numbers[i]);
                            temp.add(numbers[j]);
                            temp.add(numbers[left]);
                            temp.add(numbers[right]);
                            
                            res.add(temp);
                            left++;    
                            while (left < n && numbers[left] == numbers[left - 1])
                                left++;
                            right--;
                            while (right >= 0 && numbers[right] == numbers[right + 1])
                                right--;
                        } else if(numbers[i]+numbers[j]+numbers[left]+numbers[right] > target){
                            right--;
                        } else {
                            left++;
                        }
                    }
            }
        }
    return res;  

    }
}
