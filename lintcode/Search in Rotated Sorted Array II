//https://dl.dropboxusercontent.com/u/15824957/Lintcode/search_in_rotated_array_ii.png
public class Solution {
    /** 
     * param A : an integer ratated sorted array and duplicates are allowed
     * param target :  an integer to be search
     * return : a boolean 
     */
    public boolean search(int[] A, int target) {
      int n = A.length-1;
      int start = 0;
      int end = n;
      while(start <= end) {
        int j = start + (end-start)/2;
        if(A[j]==target){
          return true;
        }
        if(A[start] > A[j]) {
          if(A[j]<target && target<= A[end]) {
            start=j+1;
          } else {
            end = j-1;
          }

        }else if(A[start] < A[j]) {
          if(A[start] <= target && target < A[j]) {
            end = j-1;
          }else {
            start = j+1;
          }
        }
        else
          start++;
        
        // 3 3 3 3 1 2
        // |   |     |
        // s   j     e
        //A[s] == A[j] s++;
        //only 31 line is new. the rest is the same.
      }
      return false;
    }
}
