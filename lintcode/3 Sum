public class Solution {
    /**
     * @param numbers : Give an array numbers of n integer
     * @return : Find all unique triplets in the array which gives the sum of zero.
     */

       public ArrayList<ArrayList<Integer>> threeSum(int[] numbers) {
        int target = 0;
        Arrays.sort(numbers);
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        int n = numbers.length;
        
        for(int i=0; i < n; i++) {
                if (i > 0 && numbers[i] == numbers[i - 1])  
                    continue;        
                int left = i+1;
                int right = n-1;
                while(left < right) {
                    if(numbers[i]+numbers[left]+numbers[right] == 0) {
                        ArrayList<Integer> temp = new ArrayList<Integer>();
                        temp.add(numbers[i]);
                        temp.add(numbers[left]);
                        temp.add(numbers[right]);
                        
                        res.add(temp);
                        left++;    
                        while (left < n && numbers[left] == numbers[left - 1])
                            left++;
                        right--;
                        while (right >= 0 && numbers[right] == numbers[right + 1])
                            right--;
                    } else if(numbers[i]+numbers[left]+numbers[right] > 0){
                        right--;
                    } else {
                        left++;
                    }
                }
            }
        
        
        return res;
    }
}
