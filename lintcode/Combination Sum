http://www.lintcode.com/en/problem/combination-sum/
//可以
2,3,6,7 and target 7, 
[7] 
[2, 2, 3] 
明白了。开始
递归。 
你写helper？
public List<List<Integer>> combinationSum(int[] candidates, int target) {
    ArrayList<List<Integer>> result=new ArrayList<List<Integer>>();
    if(candidates == null || candidates.length ==0){
        return result;
    }
    Arrays.sort(candidates); //here i'm sorting
    List<Integer> sub=new ArrayList<>();
    helper(candidates,0,0,target,result,sub);
    return result;
}
public void helper(int[] candidates, int sumSoFar,int start, int target, List<List<Integer>> result,List<Integer> sub ){
    if(sumSoFar>target){
        return;
    }
    if(sumSoFar == target) {
        result.add(new ArrayList<Integer>(sub));    
        return;
        
    }  
    for(int i=start; i < candidates.length; i++) {
        int subtract = candidates[i];
        sumSoFar += candidates[i];
        sub.add(candidates[i]);
        helper(candidates,sumSoFar,i,target,result,sub);
        sumSoFar -= candidates[i];
        sub.remove(sub.size()-1);
    }
}
