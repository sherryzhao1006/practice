public class Solution {
    /**
     * @param m: An integer m denotes the size of a backpack
     * @param A & V: Given n items with size A[i] and value V[i]
     * @return: The maximum value
     */
    public int backPackII(int m, int[] A, int V[]) {
      int n = A.length;
      int[][] dp = new int[n][m+1];
      for(int i=0; i < n; i++) {
        dp[i][0] = 0;
      }
      
      for(int i=0; i <= m; i++) {
        dp[0][i] = (A[0] <= i) ? V[0] : 0;
      }
      
      for(int i=1; i < n; i++) {
        for(int j=0; j <= m; j++) {
          
          if(j >= A[i]) 
            dp[i][j] = Math.max(dp[i-1][j],dp[i-1][j-A[i]]+V[i]);
          else
            dp[i][j] = dp[i-1][j];
        }
      }
      return dp[n-1][m];
    }
}
