//http://www.lintcode.com/en/problem/search-for-a-range/
//[5, 7, 7, 8, 8, 10]

start = 0;
end = 5
m = 2;
A[m] = 7  <  target = 8
start = 2+1 = 3
start = 0

start =3 , n = 5;
int m = 4
8 = 8
left = m;
end = m-1; = 3
start = 3, end = 3
m=3, end = 2
left = m;

left = result.get(0)
public class Solution {
    /** 
     *@param A : an integer sorted array
     *@param target :  an integer to be inserted
     *return : a list of length 2, [index1, index2]
     */
    public ArrayList<Integer> searchRange(ArrayList<Integer> A, int target){
        ArrayList<Integer> result=new ArrayList<>();
        result.add(-1);
        result.add(-1);
        if(A == null || A.size() == 0){
            return result;
        }
        int start=0,end=A.size()-1;
    
        while(start <= end) {
            int m = start + (end-start)/2;
            if(A.get(m) < target) {
                start = m+1;
            } else if(A.get(m) >= target) {
                if(A.get(m) == target) {
                    result.set(0 ,m);
                }
                end = m-1;
            }
        }
        start = 0;
        end = A.size()-1;
        while(start <= end) {
            int m = start + (end-start)/2;
            if(A.get(m) <= target) {
                if(A.get(m) == target) {
                    result.set(1,m);
                }
                start = m+1;
            } else if(A.get(m) > target) {
                end = m-1;
            }
        }    
        
        return result;
    }
